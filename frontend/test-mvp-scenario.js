// test-telegram-integration.js ‚Äî —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π MVP
import { jobsService } from './src/services/jobs.service.js'
import { badgesService } from './src/services/badges.service.js'
import { profileService } from './src/services/profile.service.js'

async function testMVPScenario() {
  console.log('üöÄ –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è MVP...')
  
  try {
    // 1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('1. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
    const profileData = {
      user_id: 'test-user-mvp',
      full_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      phone: '+7 777 123 45 67',
      telegram_chat_id: '763612632'
    }
    const profileResult = await profileService.upsertProfile(profileData)
    console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω:', profileResult.data?.full_name)

    // 2. –°–æ–∑–¥–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ (–¥–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
    console.log('2. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏...')
    const jobData = {
      title: '–¢–µ—Å—Ç–æ–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è –¥–ª—è MVP',
      description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
      salary_from: 250000,
      company_id: 1
    }
    const jobResult = await jobsService.createJob(jobData)
    console.log('‚úÖ –í–∞–∫–∞–Ω—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞:', jobResult.data?.title)
    console.log('üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "–ù–æ–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')

    // 3. –í—ã–¥–∞—á–∞ –±–µ–π–¥–∂–∞ "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏" (–¥–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
    console.log('3. –í—ã–¥–∞—á–∞ –±–µ–π–¥–∂–∞ "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏"...')
    const badgeResult = await badgesService.awardBadge(
      'badge-first-steps',
      'test-user-mvp',
      '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏',
      'system'
    )
    console.log('‚úÖ –ë–µ–π–¥–∂ –≤—ã–¥–∞–Ω:', badgeResult.data?.reason)
    console.log('üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "–ü–æ–ª—É—á–µ–Ω –±–µ–π–¥–∂" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–π–¥–∂–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('4. –ó–∞–≥—Ä—É–∑–∫–∞ –±–µ–π–¥–∂–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
    const userBadges = await badgesService.list('test-user-mvp')
    console.log('‚úÖ –ë–µ–π–¥–∂–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:', userBadges.data?.length || 0)

    console.log('üéâ –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π MVP –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!')
    console.log('üìã –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏:', error)
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Ç–æ–ª—å–∫–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
if (typeof window !== 'undefined') {
  window.testMVPScenario = testMVPScenario
  console.log('üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: testMVPScenario()')
}

export { testMVPScenario }
