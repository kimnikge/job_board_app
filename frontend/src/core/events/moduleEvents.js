/**
 * üì° –°–ò–°–¢–ï–ú–ê –°–û–ë–´–¢–ò–ô –ú–ï–ñ–î–£ –ú–û–î–£–õ–Ø–ú–ò
 * 
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–ª–∞–±–æ—Å–≤—è–∑–∞–Ω–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏
 * —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏—è –≤–º–µ—Å—Ç–æ –ø—Ä—è–º—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
 */

class ModuleEventBus {
  constructor() {
    this.eventTarget = new EventTarget()
    this.listeners = new Map() // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
    
    console.log('üì° ModuleEventBus initialized')
  }
  
  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è
   * @param {string} eventName - –ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
   * @param {any} data - –î–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
   */
  emit(eventName, data = null) {
    const event = new CustomEvent(eventName, {
      detail: data
    })
    
    console.log(`üì§ Event emitted: ${eventName}`, data)
    
    this.eventTarget.dispatchEvent(event)
  }
  
  /**
   * –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ
   * @param {string} eventName - –ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
   * @param {Function} handler - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è
   * @param {string} moduleName - –ò–º—è –º–æ–¥—É–ª—è (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
   */
  on(eventName, handler, moduleName = 'unknown') {
    const wrappedHandler = (event) => {
      console.log(`üì• Event received: ${eventName} by ${moduleName}`, event.detail)
      handler(event)
    }
    
    this.eventTarget.addEventListener(eventName, wrappedHandler)
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (!this.listeners.has(eventName)) {
      this.listeners.set(eventName, [])
    }
    this.listeners.get(eventName).push({
      handler: wrappedHandler,
      originalHandler: handler,
      moduleName
    })
    
    console.log(`üì° Subscribed to ${eventName} from ${moduleName}`)
  }
  
  /**
   * –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —Å–æ–±—ã—Ç–∏—è
   * @param {string} eventName - –ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
   * @param {Function} handler - –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
   */
  off(eventName, handler) {
    const eventListeners = this.listeners.get(eventName)
    if (eventListeners) {
      const listenerInfo = eventListeners.find(l => l.originalHandler === handler)
      if (listenerInfo) {
        this.eventTarget.removeEventListener(eventName, listenerInfo.handler)
        
        // –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞
        const index = eventListeners.indexOf(listenerInfo)
        eventListeners.splice(index, 1)
        
        console.log(`üì° Unsubscribed from ${eventName}`)
      }
    }
  }
  
  /**
   * –û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
   * @param {string} eventName - –ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
   * @param {Function} handler - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è
   * @param {string} moduleName - –ò–º—è –º–æ–¥—É–ª—è
   */
  once(eventName, handler, moduleName = 'unknown') {
    const onceHandler = (event) => {
      handler(event)
      this.off(eventName, handler)
    }
    this.on(eventName, onceHandler, moduleName)
  }
  
  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
   */
  getActiveListeners() {
    const result = {}
    for (const [eventName, listeners] of this.listeners.entries()) {
      result[eventName] = listeners.map(l => l.moduleName)
    }
    return result
  }
  
  /**
   * –û—Ç–ø–∏—Å–∞—Ç—å –º–æ–¥—É–ª—å –æ—Ç –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π
   * @param {string} moduleName - –ò–º—è –º–æ–¥—É–ª—è
   */
  unsubscribeModule(moduleName) {
    for (const [eventName, listeners] of this.listeners.entries()) {
      const moduleListeners = listeners.filter(l => l.moduleName === moduleName)
      moduleListeners.forEach(listenerInfo => {
        this.eventTarget.removeEventListener(eventName, listenerInfo.handler)
      })
      
      // –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞
      this.listeners.set(eventName, listeners.filter(l => l.moduleName !== moduleName))
    }
    
    console.log(`üì° Unsubscribed module ${moduleName} from all events`)
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
export const moduleEvents = new ModuleEventBus()

/**
 * üé£ –ö–û–ú–ü–û–ó–ò–¶–ò–Ø –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í –ö–û–ú–ü–û–ù–ï–ù–¢–ê–•
 */
export function useModuleEvents() {
  return {
    emit: moduleEvents.emit.bind(moduleEvents),
    on: moduleEvents.on.bind(moduleEvents),
    off: moduleEvents.off.bind(moduleEvents),
    once: moduleEvents.once.bind(moduleEvents)
  }
}

/**
 * üìã –°–¢–ê–ù–î–ê–†–¢–ù–´–ï –°–û–ë–´–¢–ò–Ø –°–ò–°–¢–ï–ú–´
 */
export const SYSTEM_EVENTS = {
  // –ú–æ–¥—É–ª–∏
  MODULE_REGISTERED: 'module:registered',
  MODULE_ENABLED: 'module:enabled',
  MODULE_DISABLED: 'module:disabled',
  
  // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
  USER_LOGIN: 'auth:login',
  USER_LOGOUT: 'auth:logout',
  USER_PROFILE_UPDATED: 'auth:profile-updated',
  
  // –°—Ä–æ—á–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏
  URGENT_JOB_CREATED: 'urgent-job:created',
  URGENT_JOB_APPLIED: 'urgent-job:applied',
  URGENT_JOB_EXPIRED: 'urgent-job:expired',
  URGENT_JOB_FILLED: 'urgent-job:filled',
  
  // –û–±—ã—á–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏  
  JOB_CREATED: 'job:created',
  JOB_APPLIED: 'job:applied',
  JOB_FAVORITED: 'job:favorited',
  
  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  NOTIFICATION_RECEIVED: 'notification:received',
  NOTIFICATION_READ: 'notification:read',
  
  // –ù–∞–≤–∏–≥–∞—Ü–∏—è
  ROUTE_CHANGED: 'navigation:route-changed',
  
  // –ó–∞–≥—Ä—É–∑–∫–∞
  LOADING_START: 'loading:start',
  LOADING_END: 'loading:end'
}

/**
 * üîß HELPER –§–£–ù–ö–¶–ò–ò –î–õ–Ø –¢–ò–ü–ò–ß–ù–´–• –°–¶–ï–ù–ê–†–ò–ï–í
 */

/**
 * –£–≤–µ–¥–æ–º–∏—Ç—å –æ –∑–∞–≥—Ä—É–∑–∫–µ
 * @param {string} moduleName - –ò–º—è –º–æ–¥—É–ª—è
 * @param {boolean} isLoading - –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
 */
export function emitLoadingState(moduleName, isLoading) {
  moduleEvents.emit(isLoading ? SYSTEM_EVENTS.LOADING_START : SYSTEM_EVENTS.LOADING_END, {
    module: moduleName
  })
}

/**
 * –£–≤–µ–¥–æ–º–∏—Ç—å –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ä–æ—á–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏
 * @param {Object} urgentJob - –î–∞–Ω–Ω—ã–µ —Å—Ä–æ—á–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏
 */
export function emitUrgentJobCreated(urgentJob) {
  moduleEvents.emit(SYSTEM_EVENTS.URGENT_JOB_CREATED, urgentJob)
}

/**
 * –£–≤–µ–¥–æ–º–∏—Ç—å –æ–± –æ—Ç–∫–ª–∏–∫–µ –Ω–∞ —Å—Ä–æ—á–Ω—É—é –≤–∞–∫–∞–Ω—Å–∏—é  
 * @param {Object} application - –î–∞–Ω–Ω—ã–µ –æ—Ç–∫–ª–∏–∫–∞
 */
export function emitUrgentJobApplied(application) {
  moduleEvents.emit(SYSTEM_EVENTS.URGENT_JOB_APPLIED, application)
}

/**
 * –£–≤–µ–¥–æ–º–∏—Ç—å –æ –≤—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Object} user - –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export function emitUserLogin(user) {
  moduleEvents.emit(SYSTEM_EVENTS.USER_LOGIN, user)
}

/**
 * –£–≤–µ–¥–æ–º–∏—Ç—å –æ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export function emitUserLogout() {
  moduleEvents.emit(SYSTEM_EVENTS.USER_LOGOUT)
}

console.log('üì° Module events system ready!')
