// Telegram Web App SDK –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
// –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: https://core.telegram.org/bots/webapps

export const telegramWebAppAuth = {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ Telegram Web App
  isTelegramWebApp() {
    return !!(window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initData)
  },

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Web App
  init() {
    if (!this.isTelegramWebApp()) {
      console.log('üì± –ù–µ –≤ Telegram Web App')
      return false
    }

    const tg = window.Telegram.WebApp
    
    try {
      // –ì–æ—Ç–æ–≤–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      tg.ready()
      tg.expand()
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
      tg.setHeaderColor('#1a1a1a')
      tg.setBackgroundColor('#1a1a1a')
      
      console.log('‚úÖ Telegram Web App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
      console.log('üìä InitData –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç:', !!tg.initData)
      console.log('üë§ Unsafe User:', tg.initDataUnsafe?.user)
      console.log('üîß Platform:', tg.platform)
      console.log('üì± Version:', tg.version)
      
      return true
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram Web App:', error)
      return false
    }
  },

  // –ü–†–ê–í–ò–õ–¨–ù–û–ï –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  getAuthData() {
    if (!this.isTelegramWebApp()) {
      console.warn('‚ö†Ô∏è –ù–µ –≤ Telegram Web App')
      return null
    }

    const tg = window.Telegram.WebApp
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ initData (—ç—Ç–æ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram)
    if (!tg.initData) {
      console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç initData - –Ω–µ –º–æ–∂–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å')
      return null
    }

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ unsafe –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)
    const user = tg.initDataUnsafe?.user
    
    if (!user) {
      console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      return null
    }

    // –ö–õ–Æ–ß–ï–í–û–ï –û–¢–õ–ò–ß–ò–ï: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º initData –∫–∞–∫ –µ—Å—Ç—å –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∞ backend
    return {
      // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
      id: user.id,
      first_name: user.first_name,
      last_name: user.last_name,
      username: user.username,
      photo_url: user.photo_url,
      language_code: user.language_code,
      
      // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ø–µ—Ä–µ–¥–∞–µ–º initData –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
      initData: tg.initData,
      
      // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
      platform: tg.platform,
      version: tg.version,
      is_web_app: true,
      
      // –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
      auth_date: Math.floor(Date.now() / 1000)
    }
  },

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—à–ª–∏ –æ—Ç Telegram (–Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ - –±–∞–∑–æ–≤–∞—è)
  validateInitData() {
    const tg = window.Telegram.WebApp
    
    if (!tg.initData) {
      return { valid: false, reason: 'No initData' }
    }

    // –ü–∞—Ä—Å–∏–º initData
    const params = new URLSearchParams(tg.initData)
    const hash = params.get('hash')
    
    if (!hash) {
      return { valid: false, reason: 'No hash in initData' }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    const authDate = params.get('auth_date')
    const user = params.get('user')
    
    if (!authDate || !user) {
      return { valid: false, reason: 'Missing required fields' }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å—Ç–∞—Ä—ã–µ (–Ω–µ –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤)
    const currentTime = Math.floor(Date.now() / 1000)
    const timeDiff = currentTime - parseInt(authDate)
    
    if (timeDiff > 86400) { // 24 —á–∞—Å–∞
      return { valid: false, reason: 'Data too old' }
    }

    return { 
      valid: true, 
      hash,
      authDate: parseInt(authDate),
      userData: JSON.parse(user),
      timeDiff
    }
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ä–µ–¥–µ
  getEnvironmentInfo() {
    if (!this.isTelegramWebApp()) return null

    const tg = window.Telegram.WebApp
    
    return {
      platform: tg.platform,
      version: tg.version,
      colorScheme: tg.colorScheme,
      themeParams: tg.themeParams,
      isExpanded: tg.isExpanded,
      viewportHeight: tg.viewportHeight,
      viewportStableHeight: tg.viewportStableHeight,
      headerColor: tg.headerColor,
      backgroundColor: tg.backgroundColor,
      isClosingConfirmationEnabled: tg.isClosingConfirmationEnabled
    }
  },

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã –¥–ª—è HR –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
  applyJobBoardTheme() {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    
    try {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è HR –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
      tg.setHeaderColor('#2c3e50')
      tg.setBackgroundColor('#34495e')
      
      console.log('üé® –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Ç–µ–º–∞ Job Board')
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã:', error)
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
  showMainButton(text, callback) {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    
    if (tg.MainButton) {
      tg.MainButton.setText(text)
      tg.MainButton.show()
      tg.MainButton.onClick(callback)
    }
  },

  // –°–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
  hideMainButton() {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    
    if (tg.MainButton) {
      tg.MainButton.hide()
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
  showBackButton(callback) {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    
    if (tg.BackButton) {
      tg.BackButton.show()
      tg.BackButton.onClick(callback)
    }
  },

  // –ó–∞–∫—Ä—ã—Ç—å Web App
  close() {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    tg.close()
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  showAlert(message) {
    if (!this.isTelegramWebApp()) {
      alert(message)
      return
    }

    const tg = window.Telegram.WebApp
    tg.showAlert(message)
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  showConfirm(message, callback) {
    if (!this.isTelegramWebApp()) {
      const result = confirm(message)
      callback(result)
      return
    }

    const tg = window.Telegram.WebApp
    tg.showConfirm(message, callback)
  },

  // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
  haptic(type = 'light') {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    
    if (tg.HapticFeedback) {
      if (type === 'light') {
        tg.HapticFeedback.impactOccurred('light')
      } else if (type === 'medium') {
        tg.HapticFeedback.impactOccurred('medium')
      } else if (type === 'heavy') {
        tg.HapticFeedback.impactOccurred('heavy')
      } else if (type === 'error') {
        tg.HapticFeedback.notificationOccurred('error')
      } else if (type === 'success') {
        tg.HapticFeedback.notificationOccurred('success')
      } else if (type === 'warning') {
        tg.HapticFeedback.notificationOccurred('warning')
      }
    }
  }
}

console.log('üì± Telegram Web App Auth SDK –∑–∞–≥—Ä—É–∂–µ–Ω')
export { telegramWebAppAuth as telegramWebApp }
