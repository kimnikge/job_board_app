// Telegram Web App —É—Ç–∏–ª–∏—Ç—ã —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º SDK
export const telegramWebApp = {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ Telegram Web App
  isTelegramWebApp() {
    return !!(window.Telegram && window.Telegram.WebApp)
  },

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º SDK
  init() {
    if (!this.isTelegramWebApp()) {
      console.log('üì± –ù–µ –≤ Telegram Web App')
      return false
    }

    const tg = window.Telegram.WebApp
    
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Web App
      tg.ready()
      tg.expand() // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –Ω–∞ –ø–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
      tg.setHeaderColor('#1a1a1a')
      tg.setBackgroundColor('#1a1a1a')
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
      if (tg.MainButton) {
        tg.MainButton.hide() // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      }
      
      if (tg.SecondaryButton) {
        tg.SecondaryButton.hide() // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      }
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
      if (tg.BackButton) {
        tg.BackButton.hide() // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –±—É–¥–µ–º –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
      }
      
      console.log('‚úÖ Telegram Web App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º SDK')
      console.log('üìä InitData:', tg.initData)
      console.log('üë§ User:', tg.initDataUnsafe?.user)
      console.log('üé® Theme params:', tg.themeParams)
      console.log('üîß Platform:', tg.platform)
      console.log('üì± Version:', tg.version)
      
      return true
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram Web App:', error)
      return false
    }
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ initData
  getUserData() {
    if (!this.isTelegramWebApp()) return null

    const tg = window.Telegram.WebApp
    const user = tg.initDataUnsafe?.user

    if (!user) {
      console.warn('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ initData')
      return null
    }

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –Ω–∞—à–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    return {
      id: user.id,
      first_name: user.first_name,
      last_name: user.last_name,
      username: user.username,
      photo_url: user.photo_url,
      auth_date: Math.floor(Date.now() / 1000),
      hash: this.getInitDataHash()
    }
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ö–µ—à–∞ –∏–∑ initData –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  getInitDataHash() {
    if (!this.isTelegramWebApp()) return null
    
    const tg = window.Telegram.WebApp
    const initData = tg.initData
    
    if (!initData) return 'telegram_web_app_hash'
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º hash –∏–∑ initData
    const params = new URLSearchParams(initData)
    return params.get('hash') || 'telegram_web_app_no_hash'
  },

  // === –ö–ù–û–ü–ö–ò ===
  
  // –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É (–¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏)
  showMainButton(text, callback, params = {}) {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    if (!tg.MainButton) return
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏
    tg.MainButton.text = text
    tg.MainButton.color = params.color || tg.themeParams.button_color || '#2481cc'
    tg.MainButton.textColor = params.textColor || tg.themeParams.button_text_color || '#ffffff'
    
    // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
    tg.MainButton.offClick()
    tg.MainButton.onClick(callback)
    tg.MainButton.show()
    
    console.log('üì≤ MainButton –ø–æ–∫–∞–∑–∞–Ω–∞:', text)
  },

  // –°–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É  
  hideMainButton() {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    if (tg.MainButton) {
      tg.MainButton.hide()
      tg.MainButton.offClick()
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Ç–æ—Ä–∏—á–Ω—É—é –∫–Ω–æ–ø–∫—É (–¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π)
  showSecondaryButton(text, callback, params = {}) {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    if (!tg.SecondaryButton) return
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ç–æ—Ä–∏—á–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    tg.SecondaryButton.text = text
    tg.SecondaryButton.color = params.color || tg.themeParams.secondary_button_color || '#6c757d'
    tg.SecondaryButton.textColor = params.textColor || tg.themeParams.button_text_color || '#ffffff'
    tg.SecondaryButton.position = params.position || 'left'
    
    // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
    tg.SecondaryButton.offClick()
    tg.SecondaryButton.onClick(callback)
    tg.SecondaryButton.show()
    
    console.log('üì≤ SecondaryButton –ø–æ–∫–∞–∑–∞–Ω–∞:', text)
  },

  // –°–∫—Ä—ã—Ç—å –≤—Ç–æ—Ä–∏—á–Ω—É—é –∫–Ω–æ–ø–∫—É
  hideSecondaryButton() {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    if (tg.SecondaryButton) {
      tg.SecondaryButton.hide()
      tg.SecondaryButton.offClick()
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
  showBackButton(callback) {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    if (!tg.BackButton) return
    
    tg.BackButton.offClick()
    tg.BackButton.onClick(callback)
    tg.BackButton.show()
  },

  // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
  hideBackButton() {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    if (tg.BackButton) {
      tg.BackButton.hide()
      tg.BackButton.offClick()
    }
  },

  // === –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ===
  
  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  showAlert(message) {
    if (!this.isTelegramWebApp()) {
      alert(message)
      return Promise.resolve()
    }

    return new Promise((resolve) => {
      window.Telegram.WebApp.showAlert(message, resolve)
    })
  },

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  showConfirm(message) {
    if (!this.isTelegramWebApp()) {
      return Promise.resolve(confirm(message))
    }

    return new Promise((resolve) => {
      window.Telegram.WebApp.showConfirm(message, resolve)
    })
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å popup —Å –∫–Ω–æ–ø–∫–∞–º–∏
  showPopup(params) {
    if (!this.isTelegramWebApp()) {
      const result = confirm(params.message)
      return Promise.resolve(result ? 'ok' : 'cancel')
    }

    const tg = window.Telegram.WebApp
    if (!tg.showPopup) {
      // Fallback –∫ showConfirm –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π
      return this.showConfirm(params.message).then(result => result ? 'ok' : 'cancel')
    }

    return new Promise((resolve) => {
      tg.showPopup({
        title: params.title || '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ',
        message: params.message,
        buttons: params.buttons || [
          { id: 'cancel', type: 'cancel', text: '–û—Ç–º–µ–Ω–∞' },
          { id: 'ok', type: 'ok', text: 'OK' }
        ]
      }, resolve)
    })
  },

  // === –¢–ê–ö–¢–ò–õ–¨–ù–ê–Ø –û–ë–†–ê–¢–ù–ê–Ø –°–í–Ø–ó–¨ ===
  
  // –í–∏–±—Ä–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
  haptic(type = 'impact', style = 'medium') {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    if (!tg.HapticFeedback) return

    try {
      switch (type) {
        case 'impact':
          // –î–ª—è –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
          tg.HapticFeedback.impactOccurred(style) // light, medium, heavy, rigid, soft
          break
        case 'notification':
          // –î–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
          tg.HapticFeedback.notificationOccurred(style) // error, success, warning
          break
        case 'selection':
          // –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
          tg.HapticFeedback.selectionChanged()
          break
        default:
          tg.HapticFeedback.impactOccurred('medium')
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è Haptic feedback –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è:', error)
    }
  },

  // === –ù–ê–í–ò–ì–ê–¶–ò–Ø –ò –ó–ê–ö–†–´–¢–ò–ï ===
  
  // –ó–∞–∫—Ä—ã—Ç—å Web App
  close() {
    if (!this.isTelegramWebApp()) {
      window.close()
      return
    }

    window.Telegram.WebApp.close()
  },

  // –û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É
  openLink(url, options = {}) {
    if (!this.isTelegramWebApp()) {
      window.open(url, '_blank')
      return
    }

    const tg = window.Telegram.WebApp
    if (options.tryInstantView && tg.openTelegramLink) {
      // –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç—å –≤ Instant View
      tg.openTelegramLink(url)
    } else if (tg.openLink) {
      // –û—Ç–∫—Ä—ã—Ç—å –≤–Ω–µ—à–Ω—é—é —Å—Å—ã–ª–∫—É
      tg.openLink(url)
    } else {
      // Fallback
      window.open(url, '_blank')
    }
  },

  // === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò ===
  
  // –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–º–µ
  getThemeParams() {
    if (!this.isTelegramWebApp()) return {}
    
    return window.Telegram.WebApp.themeParams || {}
  },

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–π
  isFeatureAvailable(feature) {
    if (!this.isTelegramWebApp()) return false
    
    const tg = window.Telegram.WebApp
    
    const features = {
      mainButton: !!tg.MainButton,
      secondaryButton: !!tg.SecondaryButton,
      backButton: !!tg.BackButton,
      hapticFeedback: !!tg.HapticFeedback,
      popup: !!tg.showPopup,
      biometric: !!tg.BiometricManager,
      cloudStorage: !!tg.CloudStorage,
      settingsButton: !!tg.SettingsButton
    }
    
    return features[feature] || false
  },

  // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ Telegram
  setHeaderTitle(title) {
    if (!this.isTelegramWebApp()) {
      document.title = title
      return
    }

    // –í Web App –∑–∞–≥–æ–ª–æ–≤–æ–∫ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è Telegram'–æ–º
    console.log('üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è Web App:', title)
  },

  // === –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ –î–õ–Ø JOB BOARD ===
  
  // –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é
  setupJobApplicationButtons(jobData, onApply, onSave) {
    if (!this.isTelegramWebApp()) return

    // –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏
    this.showMainButton('üìù –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É', () => {
      this.haptic('impact', 'light')
      onApply(jobData)
    }, {
      color: '#10b981' // –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    })

    // –í—Ç–æ—Ä–∏—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏
    if (onSave && this.isFeatureAvailable('secondaryButton')) {
      this.showSecondaryButton('üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å', () => {
        this.haptic('selection')
        onSave(jobData)
      }, {
        color: '#6b7280' // –°–µ—Ä—ã–π —Ü–≤–µ—Ç –¥–ª—è –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
      })
    }
  },

  // –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å—Ä–æ—á–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏
  setupUrgentJobButtons(jobData, onApply, onShare) {
    if (!this.isTelegramWebApp()) return

    // –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Å—Ä–æ—á–Ω–æ—Å—Ç—å
    this.showMainButton('üöÄ –°–†–û–ß–ù–û –û–¢–ö–õ–ò–ö–ù–£–¢–¨–°–Ø', () => {
      this.haptic('impact', 'heavy') // –ë–æ–ª–µ–µ —Å–∏–ª—å–Ω–∞—è –≤–∏–±—Ä–∞—Ü–∏—è –¥–ª—è —Å—Ä–æ—á–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π
      onApply(jobData)
    }, {
      color: '#ef4444' // –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —Å—Ä–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    })

    // –í—Ç–æ—Ä–∏—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
    if (onShare && this.isFeatureAvailable('secondaryButton')) {
      this.showSecondaryButton('üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è', () => {
        this.haptic('selection')
        onShare(jobData)
      })
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ø–µ—à–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–∫–∏
  showJobApplicationSuccess(jobTitle) {
    this.haptic('notification', 'success')
    return this.showAlert(`‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é "${jobTitle}" —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n\n–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.`)
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  showJobApplicationError(error) {
    this.haptic('notification', 'error')
    return this.showAlert(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.\n\n–û—à–∏–±–∫–∞: ${error}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.`)
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏
  confirmJobApplication(jobTitle) {
    this.haptic('impact', 'light')
    return this.showConfirm(`–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é "${jobTitle}"?\n\n–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—é.`)
  },

  // –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
  setupJobDetailNavigation(onBack, onAction) {
    if (!this.isTelegramWebApp()) return

    // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    this.showBackButton(() => {
      this.haptic('selection')
      onBack()
    })

    // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
    if (onAction) {
      onAction()
    }
  },

  // –°–∫—Ä—ã—Ç—å –≤—Å–µ –∫–Ω–æ–ø–∫–∏ (–¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)
  clearAllButtons() {
    this.hideMainButton()
    this.hideSecondaryButton()
    this.hideBackButton()
  },

  // –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–ø–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π
  setupJobListButtons(onFilter, onCreate) {
    if (!this.isTelegramWebApp()) return

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏
    if (onCreate) {
      this.showMainButton('‚ûï –°–æ–∑–¥–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é', () => {
        this.haptic('impact', 'medium')
        onCreate()
      }, {
        color: '#3b82f6' // –°–∏–Ω–∏–π —Ü–≤–µ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
      })
    }

    // –í—Ç–æ—Ä–∏—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
    if (onFilter && this.isFeatureAvailable('secondaryButton')) {
      this.showSecondaryButton('üîç –§–∏–ª—å—Ç—Ä—ã', () => {
        this.haptic('selection')
        onFilter()
      })
    }
  },

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π —Å—Ä–æ—á–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏
  showUrgentJobNotification(jobTitle, employer) {
    this.haptic('notification', 'warning')
    return this.showPopup({
      title: 'üö® –°—Ä–æ—á–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è!',
      message: `–ù–æ–≤–∞—è —Å—Ä–æ—á–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è –æ—Ç ${employer}:\n\n"${jobTitle}"\n\n–•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏?`,
      buttons: [
        { id: 'cancel', type: 'cancel', text: '–ü–æ–∑–∂–µ' },
        { id: 'view', type: 'default', text: 'üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å' }
      ]
    })
  },

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã –ø–æ–¥ —Ç–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  applyJobBoardTheme() {
    if (!this.isTelegramWebApp()) return

    const tg = window.Telegram.WebApp
    const themeParams = tg.themeParams

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É –¥–ª—è job board
    const isDark = themeParams.bg_color ? 
      this.isColorDark(themeParams.bg_color) : true

    if (isDark) {
      tg.setHeaderColor('#1f2937')
      tg.setBackgroundColor('#111827')
    } else {
      tg.setHeaderColor('#f9fafb')
      tg.setBackgroundColor('#ffffff')
    }

    console.log('üé® –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Ç–µ–º–∞ Job Board:', isDark ? 'dark' : 'light')
  },

  // –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–º–Ω–æ—Ç—ã —Ü–≤–µ—Ç–∞
  isColorDark(hexColor) {
    if (!hexColor) return true
    
    const hex = hexColor.replace('#', '')
    const r = parseInt(hex.substr(0, 2), 16)
    const g = parseInt(hex.substr(2, 2), 16)
    const b = parseInt(hex.substr(4, 2), 16)
    
    // –§–æ—Ä–º—É–ª–∞ —è—Ä–∫–æ—Å—Ç–∏
    const brightness = (r * 299 + g * 587 + b * 114) / 1000
    return brightness < 128
  }
}
