/**
 * üîî –°–ï–†–í–ò–° –£–í–ï–î–û–ú–õ–ï–ù–ò–ô
 * 
 * –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */

import { moduleEvents, SYSTEM_EVENTS } from '../../core/events/moduleEvents.js'

class NotificationService {
  constructor() {
    this.notifications = []
    this.subscribers = new Set()
    this.isPermissionGranted = false
    
    console.log('üîî NotificationService initialized')
    this.checkPermission()
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  async checkPermission() {
    if ('Notification' in window) {
      this.isPermissionGranted = Notification.permission === 'granted'
      
      if (Notification.permission === 'default') {
        const permission = await Notification.requestPermission()
        this.isPermissionGranted = permission === 'granted'
      }
    }
  }

  /**
   * –°–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   * @param {Object} notification - –î–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  async create(notification) {
    const notificationData = {
      id: this.generateId(),
      ...notification,
      createdAt: new Date(),
      read: false
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫
    this.notifications.unshift(notificationData)

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    this.notifySubscribers(notificationData)

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ —á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    moduleEvents.emit(SYSTEM_EVENTS.NOTIFICATION_RECEIVED, notificationData)

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
    if (this.isPermissionGranted && notification.showBrowser !== false) {
      this.showBrowserNotification(notificationData)
    }

    console.log('üîî Notification created:', notificationData)
    return notificationData
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   * @param {Object} notification - –î–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  showBrowserNotification(notification) {
    if (!this.isPermissionGranted) return

    const browserNotification = new Notification(notification.title, {
      body: notification.message,
      icon: notification.icon || '/favicon.ico',
      badge: '/favicon.ico',
      tag: notification.id
    })

    // –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      browserNotification.close()
    }, 5000)

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞
    browserNotification.onclick = () => {
      window.focus()
      if (notification.onClick) {
        notification.onClick(notification)
      }
      browserNotification.close()
    }
  }

  /**
   * –û—Ç–º–µ—Ç–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
   * @param {string} notificationId - ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  markAsRead(notificationId) {
    const notification = this.notifications.find(n => n.id === notificationId)
    if (notification) {
      notification.read = true
      notification.readAt = new Date()
      
      moduleEvents.emit(SYSTEM_EVENTS.NOTIFICATION_READ, notification)
      this.notifySubscribers()
      
      console.log('üîî Notification marked as read:', notificationId)
    }
  }

  /**
   * –û—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ
   */
  markAllAsRead() {
    this.notifications.forEach(notification => {
      if (!notification.read) {
        notification.read = true
        notification.readAt = new Date()
      }
    })
    
    this.notifySubscribers()
    console.log('üîî All notifications marked as read')
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   * @param {Object} filters - –§–∏–ª—å—Ç—Ä—ã
   */
  getAll(filters = {}) {
    let result = [...this.notifications]

    if (filters.unreadOnly) {
      result = result.filter(n => !n.read)
    }

    if (filters.type) {
      result = result.filter(n => n.type === filters.type)
    }

    if (filters.limit) {
      result = result.slice(0, filters.limit)
    }

    return result
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   */
  getUnreadCount() {
    return this.notifications.filter(n => !n.read).length
  }

  /**
   * –£–¥–∞–ª–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   * @param {string} notificationId - ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  remove(notificationId) {
    const index = this.notifications.findIndex(n => n.id === notificationId)
    if (index !== -1) {
      this.notifications.splice(index, 1)
      this.notifySubscribers()
      console.log('üîî Notification removed:', notificationId)
    }
  }

  /**
   * –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  clear() {
    this.notifications = []
    this.notifySubscribers()
    console.log('üîî All notifications cleared')
  }

  /**
   * –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
   * @param {Function} callback - –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
   */
  subscribe(callback) {
    this.subscribers.add(callback)
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø–∏—Å–∫–∏
    return () => {
      this.subscribers.delete(callback)
    }
  }

  /**
   * –£–≤–µ–¥–æ–º–∏—Ç—å –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
   * @param {Object} notification - –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   */
  notifySubscribers(notification = null) {
    this.subscribers.forEach(callback => {
      try {
        callback({
          notifications: this.notifications,
          unreadCount: this.getUnreadCount(),
          newNotification: notification
        })
      } catch (error) {
        console.error('üîî Error notifying subscriber:', error)
      }
    })
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  generateId() {
    return `notification_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
  }

  /**
   * –°–æ–∑–¥–∞—Ç—å —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  
  // –°—Ä–æ—á–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è
  createUrgentJobNotification(job) {
    return this.create({
      type: 'urgent-job',
      title: 'üö® –°—Ä–æ—á–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è!',
      message: `${job.title} –≤ ${job.venue_name}. –ó–∞—Ä–ø–ª–∞—Ç–∞: ${job.pay_per_shift}‚Ç∏`,
      icon: 'üö®',
      priority: 'high',
      data: job
    })
  }

  // –ù–æ–≤–∞—è –æ–±—ã—á–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è
  createJobNotification(job) {
    return this.create({
      type: 'job',
      title: 'üíº –ù–æ–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è',
      message: `${job.title} –≤ ${job.company_name}`,
      icon: 'üíº',
      priority: 'normal',
      data: job
    })
  }

  // –û—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é
  createApplicationNotification(application) {
    return this.create({
      type: 'application',
      title: 'üìù –ù–æ–≤—ã–π –æ—Ç–∫–ª–∏–∫',
      message: `–û—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞—à—É –≤–∞–∫–∞–Ω—Å–∏—é "${application.job_title}"`,
      icon: 'üìù',
      priority: 'normal',
      data: application
    })
  }

  // –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  createSystemNotification(message, type = 'info') {
    const icons = {
      info: '‚ÑπÔ∏è',
      success: '‚úÖ',
      warning: '‚ö†Ô∏è',
      error: '‚ùå'
    }

    return this.create({
      type: 'system',
      title: '–°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
      message,
      icon: icons[type],
      priority: type === 'error' ? 'high' : 'normal'
    })
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
export const notificationService = new NotificationService()

/**
 * üé£ –ö–û–ú–ü–û–ó–ò–¶–ò–Ø –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í –ö–û–ú–ü–û–ù–ï–ù–¢–ê–•
 */
export function useNotifications() {
  return {
    create: notificationService.create.bind(notificationService),
    markAsRead: notificationService.markAsRead.bind(notificationService),
    markAllAsRead: notificationService.markAllAsRead.bind(notificationService),
    getAll: notificationService.getAll.bind(notificationService),
    getUnreadCount: notificationService.getUnreadCount.bind(notificationService),
    remove: notificationService.remove.bind(notificationService),
    clear: notificationService.clear.bind(notificationService),
    subscribe: notificationService.subscribe.bind(notificationService),
    
    // –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    createUrgentJob: notificationService.createUrgentJobNotification.bind(notificationService),
    createJob: notificationService.createJobNotification.bind(notificationService),
    createApplication: notificationService.createApplicationNotification.bind(notificationService),
    createSystem: notificationService.createSystemNotification.bind(notificationService)
  }
}

console.log('üîî Notification system ready!')
