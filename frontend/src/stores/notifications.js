import { defineStore } from 'pinia'
import { ref, computed } from 'vue'

// ‚ú® –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø STORE - –°–û–ì–õ–ê–°–ù–û –ü–õ–ê–ù–£ –≠–¢–ê–ü–ê 3
export const useNotificationsStore = defineStore('notifications', () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ
  const notifications = ref([])
  const unreadCount = ref(0)
  const loading = ref(false)
  
  // –ì–µ—Ç—Ç–µ—Ä—ã
  const unreadNotifications = computed(() => 
    notifications.value.filter(n => !n.read)
  )
  
  const recentNotifications = computed(() => 
    notifications.value.slice(0, 5)
  )
  
  const hasUnread = computed(() => unreadCount.value > 0)
  
  // –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const NotificationTypes = {
    JOB_APPLICATION: 'job_application',
    JOB_ACCEPTED: 'job_accepted',
    JOB_REJECTED: 'job_rejected',
    NEW_JOB_MATCH: 'new_job_match',
    URGENT_JOB: 'urgent_job',
    SYSTEM: 'system'
  }
  
  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const addNotification = (notification) => {
    const newNotification = {
      id: Date.now() + Math.random(),
      ...notification,
      timestamp: new Date(),
      read: false
    }
    
    notifications.value.unshift(newNotification)
    unreadCount.value++
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ (–µ—Å–ª–∏ —ç—Ç–æ toast)
    if (notification.autoHide !== false) {
      setTimeout(() => {
        removeNotification(newNotification.id)
      }, 5000)
    }
    
    return newNotification.id
  }
  
  const showSuccess = (message, options = {}) => {
    return addNotification({
      type: 'success',
      title: '–£—Å–ø–µ—à–Ω–æ!',
      message,
      icon: '‚úÖ',
      ...options
    })
  }
  
  const showError = (message, options = {}) => {
    return addNotification({
      type: 'error',
      title: '–û—à–∏–±–∫–∞!',
      message,
      icon: '‚ùå',
      autoHide: false,
      ...options
    })
  }
  
  const showWarning = (message, options = {}) => {
    return addNotification({
      type: 'warning',
      title: '–í–Ω–∏–º–∞–Ω–∏–µ!',
      message,
      icon: '‚ö†Ô∏è',
      ...options
    })
  }
  
  const showInfo = (message, options = {}) => {
    return addNotification({
      type: 'info',
      title: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
      message,
      icon: '‚ÑπÔ∏è',
      ...options
    })
  }
  
  // –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–ø–∏—Ç–∞
  const showJobApplication = (jobTitle, candidateName) => {
    return addNotification({
      type: NotificationTypes.JOB_APPLICATION,
      title: 'üë§ –ù–æ–≤—ã–π –æ—Ç–∫–ª–∏–∫!',
      message: `${candidateName} –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é "${jobTitle}"`,
      icon: 'üìù',
      autoHide: false,
      priority: 'high'
    })
  }
  
  const showJobAccepted = (jobTitle, companyName) => {
    return addNotification({
      type: NotificationTypes.JOB_ACCEPTED,
      title: 'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!',
      message: `–í–∞—à –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é "${jobTitle}" –≤ ${companyName} –ø—Ä–∏–Ω—è—Ç!`,
      icon: '‚úÖ',
      autoHide: false,
      priority: 'high'
    })
  }
  
  const showJobRejected = (jobTitle, companyName) => {
    return addNotification({
      type: NotificationTypes.JOB_REJECTED,
      title: 'üòî –û—Ç–∫–ª–∏–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω',
      message: `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ—Ç–∫–ª–∏–∫ –Ω–∞ "${jobTitle}" –≤ ${companyName} –Ω–µ –ø—Ä–æ—à–µ–ª –æ—Ç–±–æ—Ä`,
      icon: '‚ùå',
      autoHide: false,
      priority: 'normal'
    })
  }
  
  const showNewJobMatch = (jobTitle, matchPercent) => {
    return addNotification({
      type: NotificationTypes.NEW_JOB_MATCH,
      title: 'üéØ –ü–æ–¥—Ö–æ–¥—è—â–∞—è –≤–∞–∫–∞–Ω—Å–∏—è!',
      message: `–ù–∞–π–¥–µ–Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—è "${jobTitle}" —Å —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º ${matchPercent}%`,
      icon: 'üéØ',
      autoHide: false,
      priority: 'high'
    })
  }
  
  const showUrgentJob = (jobTitle, salary) => {
    return addNotification({
      type: NotificationTypes.URGENT_JOB,
      title: '‚ö° –°–†–û–ß–ù–ê–Ø –í–ê–ö–ê–ù–°–ò–Ø!',
      message: `${jobTitle} - –¥–æ ${salary.toLocaleString()} —Ç–≥. –ù—É–∂–µ–Ω —Å–µ–≥–æ–¥–Ω—è!`,
      icon: '‚ö°',
      autoHide: false,
      priority: 'urgent',
      actionButton: {
        text: '–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è',
        action: 'navigate_to_urgent_jobs'
      }
    })
  }
  
  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
  const markAsRead = (notificationId) => {
    const notification = notifications.value.find(n => n.id === notificationId)
    if (notification && !notification.read) {
      notification.read = true
      unreadCount.value = Math.max(0, unreadCount.value - 1)
    }
  }
  
  const markAllAsRead = () => {
    notifications.value.forEach(notification => {
      notification.read = true
    })
    unreadCount.value = 0
  }
  
  const removeNotification = (notificationId) => {
    const index = notifications.value.findIndex(n => n.id === notificationId)
    if (index !== -1) {
      const notification = notifications.value[index]
      if (!notification.read) {
        unreadCount.value = Math.max(0, unreadCount.value - 1)
      }
      notifications.value.splice(index, 1)
    }
  }
  
  const clearAll = () => {
    notifications.value = []
    unreadCount.value = 0
  }
  
  const clearRead = () => {
    notifications.value = notifications.value.filter(n => !n.read)
  }
  
  // Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–¥–ª—è –±—É–¥—É—â–µ–≥–æ Telegram Mini App)
  const requestNotificationPermission = async () => {
    if ('Notification' in window && Notification.permission === 'default') {
      const permission = await Notification.requestPermission()
      return permission === 'granted'
    }
    return Notification.permission === 'granted'
  }
  
  const sendPushNotification = (title, options = {}) => {
    if ('Notification' in window && Notification.permission === 'granted') {
      return new Notification(title, {
        icon: '/favicon.ico',
        badge: '/favicon.ico',
        ...options
      })
    }
  }
  
  // –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
  const subscriptions = ref({
    newJobs: true,
    urgentJobs: true,
    applications: true,
    jobMatches: true,
    systemUpdates: false
  })
  
  const updateSubscription = (type, enabled) => {
    subscriptions.value[type] = enabled
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ localStorage –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    localStorage.setItem('notification_subscriptions', JSON.stringify(subscriptions.value))
  }
  
  const loadSubscriptions = () => {
    const saved = localStorage.getItem('notification_subscriptions')
    if (saved) {
      subscriptions.value = { ...subscriptions.value, ...JSON.parse(saved) }
    }
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (–∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
  const initDemoNotifications = () => {
    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    setTimeout(() => {
      showInfo('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Job Board –¥–ª—è –æ–±—â–µ–ø–∏—Ç–∞ –ê—Å—Ç–∞–Ω—ã! üçΩÔ∏è')
    }, 1000)
    
    setTimeout(() => {
      showNewJobMatch('–ü–æ–≤–∞—Ä –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–π –∫—É—Ö–Ω–∏', 85)
    }, 3000)
    
    setTimeout(() => {
      showUrgentJob('–û—Ñ–∏—Ü–∏–∞–Ω—Ç –Ω–∞ –∑–∞–º–µ–Ω—É', 15000)
    }, 6000)
  }
  
  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    notifications,
    unreadCount,
    loading,
    subscriptions,
    
    // –ì–µ—Ç—Ç–µ—Ä—ã
    unreadNotifications,
    recentNotifications,
    hasUnread,
    
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    NotificationTypes,
    
    // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    addNotification,
    showSuccess,
    showError,
    showWarning,
    showInfo,
    
    // –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    showJobApplication,
    showJobAccepted,
    showJobRejected,
    showNewJobMatch,
    showUrgentJob,
    
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
    markAsRead,
    markAllAsRead,
    removeNotification,
    clearAll,
    clearRead,
    
    // Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    requestNotificationPermission,
    sendPushNotification,
    
    // –ü–æ–¥–ø–∏—Å–∫–∏
    updateSubscription,
    loadSubscriptions,
    
    // –î–µ–º–æ
    initDemoNotifications
  }
})
