-- –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è —Å—Ä–æ—á–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –∏ –æ–±—â–µ–ø–∏—Ç–∞
-- –î–∞—Ç–∞: 14 –∏—é–ª—è 2025

begin;

-- –¢–∞–±–ª–∏—Ü–∞ —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
create table if not exists notification_types (
    id serial primary key,
    name varchar(100) not null unique,
    description text,
    is_urgent boolean default false, -- –¥–ª—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    telegram_template text,
    push_template text
);

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
create table if not exists notifications (
    id uuid default gen_random_uuid() primary key,
    
    -- –ü–æ–ª—É—á–∞—Ç–µ–ª—å
    recipient_id uuid not null references auth.users(id),
    
    -- –¢–∏–ø –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
    notification_type_id integer not null references notification_types(id),
    title varchar(200) not null,
    message text not null,
    
    -- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç (1 - –Ω–∏–∑–∫–∏–π, 5 - –∫—Ä–∏—Ç–∏—á–Ω—ã–π)
    priority integer default 1 check (priority between 1 and 5),
    
    -- –°–≤—è–∑–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
    urgent_job_id uuid references urgent_jobs(id),
    job_posting_id uuid references job_postings(id),
    application_id uuid references applications(id),
    
    -- –ö–∞–Ω–∞–ª—ã –¥–æ—Å—Ç–∞–≤–∫–∏
    send_telegram boolean default true,
    send_push boolean default true,
    send_email boolean default false,
    
    -- –°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏
    telegram_sent boolean default false,
    telegram_sent_at timestamp with time zone,
    push_sent boolean default false,
    push_sent_at timestamp with time zone,
    email_sent boolean default false,
    email_sent_at timestamp with time zone,
    
    -- –°—Ç–∞—Ç—É—Å –ø—Ä–æ—á—Ç–µ–Ω–∏—è
    is_read boolean default false,
    read_at timestamp with time zone,
    
    -- –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–æ–ª—è
    created_at timestamp with time zone default now(),
    scheduled_for timestamp with time zone default now(), -- –∫–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
    
    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    metadata jsonb default '{}'::jsonb
);

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
create table if not exists user_notification_settings (
    id uuid default gen_random_uuid() primary key,
    user_id uuid not null references auth.users(id) unique,
    
    -- –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    telegram_enabled boolean default true,
    push_enabled boolean default true,
    email_enabled boolean default false,
    
    -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π
    urgent_jobs_notifications boolean default true,
    new_jobs_notifications boolean default true,
    application_updates boolean default true,
    
    -- –§–∏–ª—å—Ç—Ä—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≤–∞–∫–∞–Ω—Å–∏—è—Ö
    notify_specializations integer[] default '{}',
    notify_districts integer[] default '{}',
    min_salary_filter numeric(10,2),
    
    -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π
    new_applications_notifications boolean default true,
    urgent_responses_notifications boolean default true,
    
    -- –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    quiet_hours_start time default '22:00',
    quiet_hours_end time default '08:00',
    timezone varchar(50) default 'Europe/Moscow',
    
    created_at timestamp with time zone default now(),
    updated_at timestamp with time zone default now()
);

-- –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
insert into notification_types (name, description, is_urgent, telegram_template, push_template) values
('urgent_job_created', '–ù–æ–≤–∞—è —Å—Ä–æ—á–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è', true, 
 'üö® –°–†–û–ß–ù–û! –ù–æ–≤–∞—è –≤–∞–∫–∞–Ω—Å–∏—è "{title}" –≤ {venue_name}. –û–ø–ª–∞—Ç–∞: {pay_per_shift}‚ÇΩ –∑–∞ —Å–º–µ–Ω—É', 
 '–°—Ä–æ—á–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è: {title}'),
('urgent_job_match', '–°—Ä–æ—á–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è –ø–æ –≤–∞—à–µ–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏', true,
 '‚ö° –ò–¥–µ–∞–ª—å–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è! {title} –≤ {venue_name}, –∑–∞–≤—Ç—Ä–∞ –≤ {needed_time}. –ì–æ—Ç–æ–≤—ã?',
 '–ü–æ–¥—Ö–æ–¥—è—â–∞—è —Å—Ä–æ—á–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è'),
('application_received', '–ù–æ–≤—ã–π –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é', false,
 'üì® –ù–æ–≤—ã–π –æ—Ç–∫–ª–∏–∫ –Ω–∞ "{title}" –æ—Ç {candidate_name}',
 '–ù–æ–≤—ã–π –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é'),
('urgent_application_received', '–°—Ä–æ—á–Ω—ã–π –æ—Ç–∫–ª–∏–∫ "–ì–û–¢–û–í!"', true,
 'üî• –ì–û–¢–û–í –í–´–ô–¢–ò! {candidate_name} –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è –Ω–∞ "{title}". –ö–æ–Ω—Ç–∞–∫—Ç: {phone}',
 '–°—Ä–æ—á–Ω—ã–π –æ—Ç–∫–ª–∏–∫ –ø–æ–ª—É—á–µ–Ω'),
('job_expires_soon', '–í–∞–∫–∞–Ω—Å–∏—è —Å–∫–æ—Ä–æ –∑–∞–∫—Ä–æ–µ—Ç—Å—è', false,
 '‚è∞ –í–∞–∫–∞–Ω—Å–∏—è "{title}" –∑–∞–∫—Ä–æ–µ—Ç—Å—è —á–µ—Ä–µ–∑ {hours} —á–∞—Å–æ–≤',
 '–í–∞–∫–∞–Ω—Å–∏—è —Å–∫–æ—Ä–æ –∑–∞–∫—Ä–æ–µ—Ç—Å—è'),
('profile_viewed', '–í–∞—à–µ —Ä–µ–∑—é–º–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏', false,
 'üëÄ –†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å "{employer_name}" –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª –≤–∞—à–µ —Ä–µ–∑—é–º–µ',
 '–†–µ–∑—é–º–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ');

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
create or replace function create_notification(
    p_recipient_id uuid,
    p_notification_type varchar,
    p_title varchar,
    p_message text,
    p_priority integer default 1,
    p_urgent_job_id uuid default null,
    p_job_posting_id uuid default null,
    p_application_id uuid default null,
    p_metadata jsonb default '{}'::jsonb
)
returns uuid as $$
declare
    notification_id uuid;
    type_id integer;
begin
    -- –ü–æ–ª—É—á–∞–µ–º ID —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    select id into type_id from notification_types where name = p_notification_type;
    
    if type_id is null then
        raise exception 'Unknown notification type: %', p_notification_type;
    end if;
    
    -- –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    insert into notifications (
        recipient_id, notification_type_id, title, message, priority,
        urgent_job_id, job_posting_id, application_id, metadata
    ) values (
        p_recipient_id, type_id, p_title, p_message, p_priority,
        p_urgent_job_id, p_job_posting_id, p_application_id, p_metadata
    ) returning id into notification_id;
    
    return notification_id;
end;
$$ language plpgsql;

-- –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö —Å—Ä–æ—á–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏—è—Ö
create or replace function notify_urgent_job_created()
returns trigger as $$
declare
    candidate_record record;
    notification_id uuid;
begin
    -- –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
    for candidate_record in 
        select cp.user_id, cp.first_name
        from candidate_profiles cp
        where cp.is_active = true
        and cp.ready_for_urgent = true
        and (
            cp.primary_specialization_id = new.specialization_id
            or new.specialization_id = any(cp.secondary_specializations)
        )
        and (
            array_length(cp.preferred_districts, 1) is null
            or new.district_id = any(cp.preferred_districts)
        )
        and (
            cp.expected_salary_shift_min is null
            or cp.expected_salary_shift_min <= new.pay_per_shift
        )
    loop
        -- –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        select create_notification(
            candidate_record.user_id,
            'urgent_job_match',
            new.title,
            format('‚ö° –ò–¥–µ–∞–ª—å–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è! %s –≤ %s, %s –≤ %s. –û–ø–ª–∞—Ç–∞: %s‚ÇΩ. –ì–æ—Ç–æ–≤—ã?',
                new.title, new.venue_name, 
                to_char(new.needed_date, 'DD.MM'),
                coalesce(new.needed_time::text, '–≤—Ä–µ–º—è —É—Ç–æ—á–Ω—è–µ—Ç—Å—è'),
                new.pay_per_shift
            ),
            5, -- –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            new.id,
            null,
            null,
            jsonb_build_object(
                'venue_name', new.venue_name,
                'pay_per_shift', new.pay_per_shift,
                'needed_date', new.needed_date,
                'needed_time', new.needed_time
            )
        ) into notification_id;
    end loop;
    
    return new;
end;
$$ language plpgsql;

-- –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å—Ä–æ—á–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏—è—Ö
create trigger trigger_notify_urgent_job_created
    after insert on urgent_jobs
    for each row
    execute function notify_urgent_job_created();

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
create index if not exists idx_notifications_recipient on notifications(recipient_id);
create index if not exists idx_notifications_type on notifications(notification_type_id);
create index if not exists idx_notifications_priority on notifications(priority);
create index if not exists idx_notifications_unread on notifications(recipient_id, is_read)
    where is_read = false;
create index if not exists idx_notifications_scheduled on notifications(scheduled_for)
    where telegram_sent = false or push_sent = false;

-- –ö–æ–º–ø–æ–∑–∏—Ç–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
create index if not exists idx_notifications_user_feed on notifications(recipient_id, created_at desc, is_read);

commit;
